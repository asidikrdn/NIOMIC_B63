=======================================================================================================
Pertemuan 1 : Menghubungkan HTML dan CSS
-------------------------------------------------------------------------------------------------------

HTML    : Elemen-elemen / Bahan yang digunakan untuk membangun sebuah website
CSS     : Alat untuk mengatur element yang ada

Cara Menghubungkan :
- Eksternal
    Membuat sebuah folder baru, yang nantinya diisi oleh file css. Membuat file css pada folder yang sudah dibuat tadi. Menghubungkan dengan menggunakan element link pada bagian head di HTML.
    Contoh :
    <link rel="stylesheet" href="style/style.css">
    * rel : atribut untuk menentukan jenis relasi yang dihubungkan, disini kita menghubungkan css/stylesheet
    * type : atribut untuk menentukan jenis file yang akan dihubungkan
    * href : atribut untuk mengidentifikasi lokasi file css kita disimpan

- Internal
    Menuliskan kode css didalam element <style> yang disisipkan dalam element head pada HTML.
    Contoh : 
    <head>
        <title>Belajar</title>
        <style>
            h2{
                color: orange;
            }
        </style>
    </head>

- InLine
    Menuliskan langsung atribut style pada tag pembuka dari element yang ingin diberikan style/css nya.
    Contoh :
    <h3 style="color:green">Hello HTML H3</h3>

Jika ketiganya ditulis bersamaan, yang akan dibaca oleh sistem adalah yang InLine.

=======================================================================================================
Pertemuan 2 : Selector Dengan Nama Element, ID, dan Class
-------------------------------------------------------------------------------------------------------
Mengggunakan nama element sebagai selector
    Kita langsung menuliskan tag html pada css untuk mengatur element tersebut. 
    Contoh :
    h1{color: blue;}

    Dengan kode css diatas, maka semua element h1 pada html yang terhubung ke css akan diformat menjadi berwarna biru.

Menggunakan id sebagai selector
    Kita dapat memformat element html menggunakan css dengan menambahkan attribut id pada tag pembuka di html, lalu mengaturnya di css.
    Contoh :
    Pada HTML   => <h1 id="judul">Belajar CSS 2</h1>
    Pada CSS    => #judul {olor: orange;}

    Dengan kode diatas, maka element yang memiliki id "judul" akan diformat menjadi berwarna orange. Untuk menggunakan selector id pada css, kita harus menggunakan tanda pagar didepan id.

    Jika ada 2 format css yang dilakukan pada suatu element maka yang dilihat adalah yg lebih spesifik. Misalnya diatas, element h1 sudah diformat dengan css menjadi warna biru, tapi dari semua element css ada 1 element h1 yang didalamnya terdapat id dan sudah diformat css, maka yang akan terbaca oleh sistem pada element h1 tersebut adalah css dengan selector id.

Menggunakan class sebagai selector
    Kita dapat memformat element html menggunakan css dengan menambahkan attribut class pada tag pembuka di html, lalu mengaturnya di css.
    Contoh :
    Pada HTML   => <h1 class="belajar">Belajar CSS 3</h1>
    Pada CSS    => .belajar {color: green;}

    Dengan kode diatas, maka element yang memiliki class "belajar" akan diformat menjadi berwarna orange. Untuk menggunakan selector class pada css, kita harus menggunakan tanda titik (.) didepan class.

    Jika ada 2 format css yang dilakukan pada suatu element maka yang dilihat adalah yg lebih spesifik. Misalnya diatas, element h1 sudah diformat dengan css menjadi warna biru, tapi dari semua element css ada 1 element h1 yang didalamnya terdapat class dan sudah diformat css, maka yang akan terbaca oleh sistem pada element h1 tersebut adalah css dengan selector class.
    Namun jika class dihadapkan dengan id, maka yang akan terbaca oleh sistem adalah selector id, hal tersebut terjadi karena id sifatnya lebih spesifik (unik).

Note : 
Perbedaan id dan class, keduanya merupakan penanda pada element html, namun penulisan/penggunaan id harus unik dan tidak boleh terduplikasi dalam 1 html yang sama, sedangkan class boleh ditulis berulang kali (sama).

=======================================================================================================
Pertemuan 3 : Property dan Color
-------------------------------------------------------------------------------------------------------

Property adalah kode yang ditulis dalam selector pada css.
Contoh : 
#idwarna {color: red;}
Pada kode diatas, yang merupakan properti adalah color. Properti tersebut diterapkan pada selector #idwarna dengan value red.

Untuk property color, kita dapat menuliskan value dengan 2 cara. Cara pertama yaitu dengan menuliskan langsung warna yang diinginkan, Cara kedua dengan menuliskan hex code dari warna yang diingingkan. Penuliskan dengan hex code lebih spesifik ketimbang menuliskan nama warnanya, dan biasanya cara ini yang akan lebih sering digunakan.

=======================================================================================================
Pertemuan 4 : Background Color - Image - Repeat - Position
-------------------------------------------------------------------------------------------------------

Background Color
    Property untuk memberikan background warna pada element html
    Contoh :
    background-color: orange;

Background Image
    Property untuk memberikan background gambar pada element html. Value dari property yaitu url yang didalamnya ditulis lokasi gambar (Bisa local bisa internet).
    Contoh :
    local       => background-image: url("../img/laut.jpg");
    internet    => background-image: url("https://cdn.pixabay.com/photo/2018/01/31/12/16/architecture-3121009_960_720.jpg");

Background Repeat
    Property untuk mengatur perulangan dari background (Biasanya terjadi jika gambar yang digunakan tidak memenuhi layar) baik secara horizontal maupun vertical. Value dari property ini antara lain no-repeat, repeat-x, repeat-y, dan repeat.
    Contoh : background-repeat: no-repeat;

Background Position
    Property untuk mengatur posisi dari background (Biasanya digunakan jika gambar yang digunakan tidak memenuhi layar).
    Contoh : background-position: center top;

=======================================================================================================
Pertemuan 5 : Border
-------------------------------------------------------------------------------------------------------

Property Border digunakan untuk memberikan bingkai pada element html.
Contoh :
.borderCSS {
    border-style: dotted;
}

Value dari property ini cukup beragam tergantung jenis bingkai yang diinginkan, diataranya :
- dotted : berbentuk titik
- dashed : berbentuk strip/garis putus-putus
- solid : berbentuk garis utuh
- double : berbentuk 2 garis / garis ganda
- groove : Mendefinisikan batas beralur 3D. Efeknya tergantung pada nilai warna batas
- ridge : Menentukan batas bergerigi 3D. Efeknya tergantung pada nilai warna batas
- inset : Mendefinisikan batas inset 3D. Efeknya tergantung pada nilai warna batas
- outset : Mendefinisikan batas outset 3D. Efeknya tergantung pada nilai warna batas
- none : Menghilangkan border
- hidden : Menyembunyikan border

Penulisan value pada property ini ada 3 cara.
1. Menuliskan 1 value, value ini akan dibaca dan digunakan untuk memformat seluruh sisi pada bingkai.
Contoh : 
.borderCSS {
    border-style: dotted;
}

2. Menuliskan 2 value, value pertama akan digunakan untuk memformat sisi atas dan bawah border, value kedua akan digunakan untuk memformat sisi kiri dan kanan border.
Contoh :
.borderCSS {
    border-style: dotted dashed;
}

3. Menuliskan 4 value, value ini akan dibaca dan digunakan untuk masing-masing sisi dengan urutan sebagai berikut :
value pertama = sisi atas
value kedua = sisi kanan
value ketiga = sisi bawah
value keempat = sisi kiri

Contoh :
.borderCSS{
    border-style: dotted dashed none double;
}

=======================================================================================================
Pertemuan 6 : Padding dan Margin
-------------------------------------------------------------------------------------------------------

PADDING
Property padding digunakan untuk memberikan jarak pada sisi dalam element itu sendiri.
Contoh :
padding-top: 50px;

MARGIN
Property margin digunakan untuk memberikan jarak pada sisi luar antar element.
Contoh :
margin: 50px 100px 0px 20px;

Penulisan padding dan margin dapat dilakukan dengan 4 cara, yaitu
1. Membuat pada masing-masing sisi
    Contoh :
    {
        padding-top: 50px;
        padding-bottom: 20px;
        padding-left: 30px;

        margin-left: 40px;
        margin-right: 50px;
        margin-bottom: 80px;
        margin-top: 100px;
    }

2. Menuliskan 1 value untuk seluruh sisi, value ini akan dibaca dan digunakan untuk memformat seluruh 
    Contoh :
    {
        padding: 50px;

        margin: 50px;
    }

3. Menuliskan 2 value, value pertama akan digunakan untuk memformat sisi atas dan bawah, value kedua akan digunakan untuk memformat sisi kiri dan kanan.
    Contoh :
    {
        padding: 50px 100px;

        margin: 50px 100px;
    }

4. Menuliskan 4 value, value ini akan dibaca dan digunakan untuk masing-masing sisi dengan urutan sebagai berikut :
    value pertama = sisi atas
    value kedua = sisi kanan
    value ketiga = sisi bawah
    value keempat = sisi kiri

    Contoh:
    {
        padding: 50px 100px 0px 20px;
        margin: 50px 100px 0px 20px;
    }

=======================================================================================================
Pertemuan 7 : Width dan Height
-------------------------------------------------------------------------------------------------------

Property Width dan Height digunakan untuk mengatur tinggi dan lebar element.
Contoh : 
{
    height: 100px;
    width: 150px;
}

Selain contoh diatas yang bersifat statis, property ini juga memiliki penulisan dengan tambahan fungsi, antara lain
- Min
    Mengatur batas ukuran minimal tinggi/lebar element. Ketika kontennya sedikit, tinggi/lebar elementnya akan tetap seperti yang diberikan, namun ketika isi kontennya bertambah banyak maka tinggi/lebar element akan menyesuaikan.
    Contoh :
    {
        min-height: 100px;
    }

- Max
    Mengatur batas ukuran maksimal tinggi/lebar element. Ketika kontennya sedikit, tinggi/lebar elementnya akan menyesuaikan (kecil), ketika isi kontennya bertambah banyak maka tinggi/lebar element akan menyesuaikan sampai dengan batas yang ditentukan.
    Contoh :
    {
        max-width: 150px;
    }

=======================================================================================================
Pertemuan 8 : Text Property
-------------------------------------------------------------------------------------------------------

Property Text digunakan untuk memberikan/mengatur banyak hal terkait text dalam sebuah element. Diantaranya :

- Text Align
    Mengatur perataan teks.
    Contoh :
    text-align: center;

- Text Decorations
    Memberikan dekorasi pada teks.
    Contoh :
    text-decoration: underline;

- Text Transform
    Mengubah penulisan pada teks.
    Contoh :
    text-transform: uppercase;

- Text Indent
    Memberikan indentasi pada teks.
    Contoh :
    text-indent: 60px;

- Letter Spacing
    Mengatur jarak spasi antar huruf.
    Contoh :
    letter-spacing: 4px;

- Word Spacing
    Mengatur jarak spasi antar kata.
    Contoh :
    word-spacing: 10px;

Dan masih banyak lagi fungsi serta value lainnya.

=======================================================================================================
Pertemuan 9 : Visited - Link - Hover - Active
-------------------------------------------------------------------------------------------------------

Property link digunakan untuk mengatur warna pada link, terdapat 4 fungsi yang bisa digunakan, yaitu :
- Visited 
    Untuk mengatur warna pada link yang sudah pernah dikunjungi.
    Contoh : 
    a:visited {
        color: green;
    }

- Link 
    Untuk mengatur warna pada link yang belum pernah dikunjungi
    Contoh : 
    a:link {
        color: orange;
    }

- Hover
    Untuk mengatur warna pada link ketika disorot oleh pointer.
    Contoh : 
    a:hover {
        color: red;
    }

- Active
    Untuk mengatur warna pada link ketika diklik. Untuk melihatnya, silahkan coba klik dan tahan mouse.
    Contoh :
    a:active {
        color: yellow;
    }

=======================================================================================================
Pertemuan 10 : Outline
-------------------------------------------------------------------------------------------------------

Outline pada CSS umumnya digunakan untuk menambahkan garis disekitar elemen. Sekilas outline tampak sangat mirip dengan border, tetapi berbeda dengan border. Berikut perbedaannya:
- Outline tidak memakan ruang dan bukan termasuk penghitungan box model. Outline selalu ditempatkan di atas kotak elemen yang dapat menyebabkan mereka tumpang tindih dengan elemen lain.
- Tidak seperti border, outline tidak bisa mengatur setiap sudut secara individu. Outline hanya bisa mengatur semua sudur sekaligus
- Tidak seperti border, outline tidak mengubah ukuran atau posisi elemen.

Beberapa property outline :
- Outline           : Mengatur semua properti outline dalam satu deklarasi
- Outline-style     : Mengatur model outline
- Outline-width     : Mengatur lebar outline
- Outline-color     : Mengatur warna outline
- Outline-offset    : Mengatur ruang/jarak antara outline dengan tepian element

Referensi : https://hendky.com/outline-css/

=======================================================================================================
Pertemuan 11 : Table
-------------------------------------------------------------------------------------------------------

Ada banyak properti yang dapat digunakan dalam memanipulasi table, diantaranya :
- border
- width & height
- text
- vertical-align
- background-color

=======================================================================================================
Pertemuan 12 : Memahami Property Margin Top dan Property Top
-------------------------------------------------------------------------------------------------------

Perbedaan Margin Top dan Top :
Margin Top berfungsi mengatur jarak antara element tersebut dengan element diatasnya.
Top berfungsi mengatur jarak pada sisi atas element tersebut dari posisi defaultnya, hampir mirip seperti padding, bedanya jika padding hanya menggeser isi elementnya sedangkan top menggeser keseluruhan element dengan jarak yang bersifat transparan seperti margin.

=======================================================================================================
Pertemuan 13 : Position Relative dan Absolute
-------------------------------------------------------------------------------------------------------

Kegunaan position pada CSS
Pada CSS sendiri Anda bisa mengatur letak posisi setiap elemen, ini sangat berguna untuk desain tata letak yang baik. Didalam CSS ada beberapa metode yang bisa Anda gunakan untuk menentukan posisi elemen dengan properti position. Pada properti position Ada lima nilai yang bisa Anda gunakan:
- static
- relative
- absolute
- fixed
- sticky

Agar berfungsi Anda juga perlu mengatur arah posisi yang lebih spesifik dengan properti: top, right, bottom dan left, mereka juga bekerja secara berbeda tergantung pada nilai posisi.


POSISI STATIC
Elemen HTML secara default diposisikan static. Posisi static tidak diposisikan dengan cara khusus apa pun, melainkan diposisikan sesuai dengan aliran normal halaman. Elemen posisi static tidak bisa dipengaruhi oleh properti top, right, bottom dan left.


POSISI RELATIVE
Elemen dengan posisi relative diposisikan relative terhadap posisi normalnya. Dengan posisi relative Anda bisa mengatur letak posisi dengan properti top, right, bottom dan left. Elemen yang diposisikan relative dapat tumpang tindih dengan elemen lain, dan menjaga ruang yang awalnya disediakan dalam aliran normal.


POSISI ABSOLUTE
Elemen dengan posisi absolute diposisikan sepenuhnya keluar dari aliran normalnya. Dengan posisi absolute Anda bisa mengatur letak posisi dengan properti top, right, bottom dan left. Elemen yang diposisikan absolute dapat tumpang tindih dengan elemen lain, dan tidak menjaga ruang yang awalnya disediakan dalam aliran normal.

Jika posisi absolute dibungkus dengan posisi relative, maka akan mengikuti posisi kordinat dari pembungkusnya (relative). Namun jika posisi absolute tidak memiliki pembungkus yang mempunyai posisi relative, maka ia menggunakan elemen <body> sebagai kordinatnya.


Simpelnya ialah :

Posisi Relative 
Posisinya akan bergerak berdasarkan posisi semula. Misal kita menambahkan properti top sebesar 10px, maka element akan digeser pada bagian atasnya sebesar 10px dari posisi semula.

Posisi Absolute 
Posisinya akan bergerak berdasarkan posisi parentnya (element yang membungkus dirinya). Parent dari posisi absolute harus bersifat relative.
Misal kita menambahkan properti bottom sebesar 10px, maka element akan digeser dari bagian terbawah pada element pembungkusnya sejauh 10px

=======================================================================================================
Pertemuan 14 : Position Fixed dan Sticky
-------------------------------------------------------------------------------------------------------

Kegunaan position pada CSS
Pada CSS sendiri Anda bisa mengatur letak posisi setiap elemen, ini sangat berguna untuk desain tata letak yang baik. Didalam CSS ada beberapa metode yang bisa Anda gunakan untuk menentukan posisi elemen dengan properti position. Pada properti position Ada lima nilai yang bisa Anda gunakan:
- static
- relative
- absolute
- fixed
- sticky

Agar berfungsi Anda juga perlu mengatur arah posisi yang lebih spesifik dengan properti: top, right, bottom dan left, mereka juga bekerja secara berbeda tergantung pada nilai posisi.


POSISI FIXED
Elemen dengan posisi fixed digunakan untuk memberikan posisi tetap bahkan jika halaman tersebut digulir. Dengan posisi fixed Anda bisa mengatur letak posisi dengan properti top, right, bottom dan left. Elemen yang diposisikan fixed dapat tumpang tindih dengan elemen lain, dan tidak menjaga ruang yang awalnya disediakan dalam aliran normal.


POSISI STICKY
Elemen dengan posisi sticky digunakan untuk toggle posisi relative dan posisi fixed. Ini diposisikan relatif sampai posisi offset yang diberikan bertemu di viewport – kemudian “sticky” di tempatnya. Dengan posisi sticky Anda bisa mengatur letak posisi dengan properti top, right, bottom dan left. Elemen yang diposisikan sticky dapat tumpang tindih dengan elemen lain, dan tidak menjaga ruang yang awalnya disediakan dalam aliran normal.

Jangan lupa menentukan properti position, jika tidak sticky tidak akan berjalan.

Informasi: 
Internet Explorer, Edge 15 dan browser versi yang lebih lama tidak mendukung penentuan posisi sticky. Safari membutuhkan awalan -webkit- agar berfungsi.


Simpelnya :

POSISI FIXED
Ciri yang paling terlihat adalah element dengan posisi fixed akan benar-benar tetap diam, bahkan ketika halaman di scroll. Acuan posisi dari tipe fixed ialah element body, iya tidak bergantung pada element pembungkus lainnya walaupun sudah dibungkus.

POSISI STICKY
Ciri yang paling terlihat untuk posisi sticky ialah ia akan bersifat relative, sampai ketika menemukan posisi yang sesuai dengan properti yang diset maka ia akan berubah menjadi fixed. Misal pada awalnya element itu ada di posisi bagian tengah dari halaman, lalu diberi properti top senilai 40, maka ketika kita scroll halaman webnya sampai ia berada di posisi 40px dari atas layar, dia akan berhenti walaupun halaman websitenya masih terus kita scroll.
Sama seperti tipe fixed, acuan posisi dari tipe sticky ialah element body, iya tidak bergantung pada element pembungkus lainnya walaupun sudah dibungkus.