===================================================================================================================
Pertemuan 1 : Pengenalan CSS
-------------------------------------------------------------------------------------------------------------------

Pengertian & Fungsi

CSS (Cascading Style Sheet) digunakan untuk mengubah tampilan (style) dari halaman web. Halaman web modern terdiri dari 3 komponen dasar
- HTML : membuat struktur
- CSS : untuk tampilan
- Javascript : untuk interaksi

CSS berfungsi untuk mengatur tampilan (style) dari sebuah dokumen, disini dokumen yang digunakan ialah HTML. Dengan menggunakan CSS kita dapat mengatur hampir seluruh tampilan dari HTML, seperti warna, background, ukuran font, posisi judul, tampilan layout, dan masih banyak lagi. Ditambah dengan banyak fitur lanjutan seperti color gradient, transition, dan animation.

===================================================================================================================
Pertemuan 2 : Selector, Declaration, Property dan Value
-------------------------------------------------------------------------------------------------------------------

Selector
    Berfungsi untuk mencari bagian mana dari HTML yang ingin disisipi kode CSS. CSS menyediakan berbagai macam jenis Selector, dari yang sederhana seperti element selector, hingga yang cukup rumit seperti pseudo selector.

Declaration
    Bagian yang berada diantara tanda kurung kurawal, bagian ini menjadi tempat menyimpan kode-kode CSS (Property dan Value).

Property
    Atribut yang dibutuhkan untuk mengatur jenis style CSS atau bagian apa yang akan dirubah dari sebuah element HTML. Misalnya jenis font, ukuran huruf, background, lebar tabel, dan hal yang berkaitan dengan komponen HTML lainnya. Atribut property harus memiliki value.

Value
     Value sangat bergantung kepada property, misal untuk ukuran font bisa menggunakan satuan pixel(px), point, dll. Tapi untuk property warna (color) kita harus menggunakan value berupa nama warna, kode RGB, atau kode Hexa.

Contoh :
h1 {
    font-size: 18px;
    color : green;
}

Dari kode diatas yang merupakan
- Selector yaitu : h1
- Property yaitu : font-size dan color
- Value yaitu : 18px dan green

===================================================================================================================
Pertemuan 3 : Cara penulisan Selector, Property dan Value
-------------------------------------------------------------------------------------------------------------------

Sebuah style di dalam CSS diawali dengan penulisan selector, yakni bagian apa pada HTML yang ingin diubah tampilannya. Cara menuliskan selector dengan menuliskan atribut HTML mana yang akan diberikan CSS.
Contohnya kita mau memformat element body :
body

Setelah menuliskan selector, kita harus menuliskan deklarasi untuk property dan value dari selector tersebut. Penulisan deklarasi dilakukan dengan cara memberi tanda kurung kurawal setelah selector.
Contoh : 
body {}

Penulisan property dilakukan dengan menuliskan property apa yang akan digunakan di dalam deklarasi, misalnya kita akan menuliskan property background-color untuk element body, maka kita cukup menuliskannya didalam tanda kurung kurawal.
Contoh : 
body {
    background-color :
}

Setelah menuliskan property, kita dapat menuliskan value setelah tanda titik dua.
Contoh : 
body {
    background-color :  #F7F7F7;
}

Pada akhir dari property dan value, kita harus menuliskan tanda titik koma ";", tanda tersebut juga digunakan untuk memisahkan properti satu dengan property lainnya.

===================================================================================================================
Pertemuan 4 : Case Sensitivity dan Whitespace
-------------------------------------------------------------------------------------------------------------------

Case Sensitivity
    Istilah yang membahas apakah sebuah bahasa pemrograman membedakan penulisan huruf kecil dan huruf besar. Secara umum, CSS bersifat insensitive, yang berarti tidak membedakan huruf besar dan huruf kecil.
    Contoh : 
    p {
        font-size : 18px;
    }
    p {
        font-SiZe : 18PX;
    }

    Kedua kode CSS diatas akan dianggap sama, walaupun yang satu ditulis dengan huruf kecil, yang satunya lagi ditulis dengan kombinasi huruf besar.


White Space
    Istilah yang merujuk pada karakter 'spasi' yang tidak tampil di layar, contohnya seperti karakter spasi, tab, dan karakter enter (dikenal juga dengan karakter carriage returns).

    Whitespace pada CSS akan diabaikan pada beberapa kondisi, diantaranya :
    - Jarak antara selector dan deklarasi
        Contoh :
        p {}
        p       {}
    - Jarak antara property dan value
        Contoh :
        p {
            font-size: 18px;
            color                   : white;

        }
    - Jarak antar properti-value yang satu dengan yang lainnya
        Contoh :
        p {
            font-size: 18px;
            color                   : white;

        }
        p {
            font-size: 18px; color : white;
        }
    
    Whitespace pada CSS akan dianggap pada beberapa kondisi, yaitu :
    - Penulisan Selector
        Contoh :
        p.pertama {}
        p .pertama {}
        Pada baris pertama, css akan mencari seluruh element paragraf yang memiliki atribut class="pertama".
        Pada baris kedua, css akan mencari seluruh element yang memiliki class="pertama" yang berada didalam element paragraf (menginduk ke paragraf).
    - Penulisan angka dan satuannya pada value
        Contoh :
        p {font-size : 18px;}   --> Dapat digunakan
        p {font-size : 18 px}   --> Tidak dapat digunakan

===================================================================================================================
Pertemuan 5 : Membuat Komentar
-------------------------------------------------------------------------------------------------------------------

Komentar (Comment) adalah bagian dari kode yang tidak diproses ketika program berjalan (akan diabaikan). Sesuai namanya, komentar digunakan untuk membuat catatan tentang kode tersebut. CSS hanya mendukung 1 cara penulisan komentar, yaitu dibuka dengan karakter '/*' dan diakhiri dengan karakter '*/'.
Contoh :
/* Ini adalah style untuk h1 dan h2 */
h1, h2 {
    color:red;                  /* Mengatur warna konten menjadi merah */
    background-color: blue;     /* Mengatur warna background menjadi biru */
}

Karena tidak akan diproses, komentar juga digunakan untuk "mematikan" beberapa kode CSS. Teknik ini sangat berguna saat proses debugging (mencari kesalahan kode program), atau kita ingin mencoba-coba kombinasi style baru tapi tidak ingin menghapus kode lama.
Contoh :
/* Dimatikan sementara */
/* body
{
    BackGround-Color: #F7F7F7;
} */
body
{
    BackGround-Color: lightblue;
}

===================================================================================================================
Pertemuan 6 : Cara Menginput (Menghubungkan) Kode CSS Pada File HTML
-------------------------------------------------------------------------------------------------------------------

Untuk menghubungkan kode CSS dengan HTML terdapat 3 cara :
- Inline CSS
    Menempatkan kode css langsung pada element dalam html yang ingin diberikan css dengan menambahkan atribut style. Dengan metode ini kita tidak perlu menggunakan selector.
    Contoh : 
    <h1 style="color : red">Sedang Belajar CSS</h1>

- Internal CSS
    Menempatkan kode css pada dokumen html namun tidak langsung dituliskan pada element, kode css dituliskan didalam element head dengan menambahkan tag style. Dengan metode ini kita perlu menggunakan selector.
    Contoh : 
    <head>
        <style>
        /* Internal CSS / Embed CSS */
        .pertama {
            color: blue;
        }      
        </style>
    </head>

- Eksternal CSS
    Menempatkan seluruh kode CSS pada file terpisah kemudian memanggilnya di dalam kode html. Metode ini paling disarankan karena sangat fleksibel dan dapat digunakan untuk beberapa file html sekaligus.
    Untuk memanggil eksternal css, terdapat 2 metode :
    - Menggunakan tag <link>
        Kita dapat memanggil kode css eksternal ke dalam file html menggunakan tag <link> yang dituliskan didalam element head.
        Contoh :
        <link rel="stylesheet" href="style1.css">
    
    - Menggunakan @import
        Kita juga dapat memanggil eksternal css dengan perintah @import yang dituliskan didalam element style (tempat menulis css internal) dalam html. Perintah @import harus berada paling atas dalam element style.
        Contoh :
        <head>
            <style>
            /* Eksternal CSS dengan metode @import, harus berada di posisi teratas didalam style */
            @import url("style2.css");
            </style>
        </head>

===================================================================================================================
Pertemuan 7 : CSS Media Type
-------------------------------------------------------------------------------------------------------------------

Dengan atribut media type, kita dapat mengatur di media/perangkat manakah kode CSS akan berjalan. Atribut ini dituliskan dalam tag pembuka <link>. Secara default value dari atribut media adalah "all" dimana kode css akan berjalan baik pada saat ditampilkan di layar maupun saat akan dicetak. Value lain yang dapat digunakan pada atribut media adalah :

- Screen
    Value ini digunakan untuk mengatur kode css agar berjalan hanya pada saat halaman web ditampilkan di layar. Pada saat dicetak, kode css tersebut tidak akan berfungsi.
    Contoh :
    <link rel="stylesheet" href="style1.css" media="screen">

- Print
    Value ini digunakan untuk mengatur kode css agar berjalan hanya pada saat halaman web dicetak. Pada tampilan layar, kode css tersebut tidak akan berjalan.
    Contoh :
    <link rel="stylesheet" href="style2.css" media="print">

===================================================================================================================
Pertemuan 8 : Tugas 1 CSS
-------------------------------------------------------------------------------------------------------------------

===================================================================================================================
Pertemuan 9 : Universal Selector
-------------------------------------------------------------------------------------------------------------------

Universal selector adalah jenis selector yang melakukan seleksi pada seluruh tag dalam file html yang terhubung. Universal selector hanya ada 1, yaitu tanda bintang "*" yang akan berguna untuk melakukan seleksi secara keseluruhan.
Contoh :
* {
  color: blue;
  background-color: lightyellow;
}

===================================================================================================================
Pertemuan 10 : Element Selector
-------------------------------------------------------------------------------------------------------------------

Element Selector / Tag Selector / Type Selector adalah selector yang nilainya merupakan tag HTML itu sendiri. Semua tag pada HTML dapat digunakan sebagai selector.
Contoh :
h1 {
    color: green;
    text-decoration: underline;
}

Dengan kode diatas maka seluruh element h1 beserta semua isinya (dari tag pembuka sampai tag penutup) akan diformat menjadi berwarna hijau dan digarisbawahi. Jika di dalam element h1 ada element lain, maka element tersebut akan ikut terformat.

===================================================================================================================
Pertemuan 11 : Class Selector
-------------------------------------------------------------------------------------------------------------------

Class selector merupakan salah satu selector yang paling umum dan paling sering digunakan. Class selector akan mencari seluruh tag pada html yang memiliki atribut class dengan nilai yang sesuai. Untuk menggunakan class selector pada css, diawali dengan tanda titik "." yang diikuti nama class (Contoh : .judul). Class selector memiliki beberapa aturan penulisan, yaitu :
    - Nama Class hanya bisa ditulis dengan letters (abjad), numbers (angka), hyphens (tanda penghubung), dan underscores (garis bawah).
    - Setelah "." nama class harus diawali dengan letters (huruf alfabet) pada awal karakter. 
        Contoh : ".wali9" adalah benar, namun ".9wali" adalah salah.
    - Nama Class memiliki sifat case-sensitive. Artinya perbedaan huruf besar dan kecil akan berpengaruh.
        Contoh : ".content" berbeda dengan ".Content" karena perbedaan huruf C pada awal karakter.

Class selector biasanya digunakan untuk memberikan style pada element berdasarkan group tertentu. Satu nama class bisa disisipkan pada beberapa element agar memiliki style yang sama.

===================================================================================================================
Pertemuan 12 : ID Selector
-------------------------------------------------------------------------------------------------------------------

ID selector merupakan selector yang juga sering digunakan seperti class selector. Cara kerjanya pun sama, yaitu akan mencari seluruh tag pada html yang memiliki atribut id dengan nilai yang sesuai. Perbedaan antara class selector dan id selector ada 2 yaitu :
- Penulisan
    Id selector diawali dengan tanda pagar "#", berbeda dengan class selector yang menggunakan tanda titik.

- Unik
    Id selektor bersifat unik, sehingga tidak diperbolehkan ada beberapa tag html yang menggunakan atribut id dengan value yang sama. Berbeda dengan class yang dapat digunakan dibeberapa tag html dengan nama class yang sama.

===================================================================================================================
Pertemuan 13 : Attribute Selector
-------------------------------------------------------------------------------------------------------------------

Atribut selector merupakan sebuah selektor yang digunakan untuk mencari tag HTML berdasarkan ada atau tidaknya sebuah atribut. Mirip seperti class dan id selector, namun bersifat lebi global karena tidak terbatas pada atribut class dan id saja. Untuk menggunakan atribut selector, kita cukup menuliskan nama atribut beserta valuenya didalam tanda kurung siku. Contoh :
[type=submit] {
    background-color: orange;
}

===================================================================================================================
Pertemuan 14 : Group Selector
-------------------------------------------------------------------------------------------------------------------

Group Selector adalah penggabungan beberapa selector dalam satu perintah. Cara menggunakannya ialah dengan menuliskan beberapa selector sekaligus dan memisahkannya dengan tanda koma ",".
Contoh :
h1, h2, p {
    text-align: center;
    color: red;
}

===================================================================================================================
Pertemuan 15 : Element Spesific Selector
-------------------------------------------------------------------------------------------------------------------

Element Spesific Selector mirip seperti group selector, bedanya ialah element Spesific selector lebih fokus kepada class id nya. Misalnya kita akan menyeleksi seluruh element h2 tetapi hanya element h2 yang memiliki atribut class dengan value judul, maka contoh penulisannya adalah element selector dan class selector digabungkan dan ditulis tanpa menggunakan spasi.
Contoh :
h2.judul {
    color: silver;
}

===================================================================================================================
Pertemuan 16 : Tugas 2 CSS
-------------------------------------------------------------------------------------------------------------------

===================================================================================================================
Pertemuan 17 : Cascade pada CSS
-------------------------------------------------------------------------------------------------------------------

Cascade pada CSS adalah aturan prioritas dimana jika terjadi "bentrok" antara beberapa kode css, maka css akan memilih mana yang dibaca/digunakan oleh sistem. "Bentrok" yg dimaksud disini ialah ketika ada kode css dengan selector dan property yang sama namun valuenya berbeda.
Contoh :
p {
    color: red;
}
p {
    color: green;
}

Jika terjadi seperti diatas, maka hanya 1 kode css yang akan diterapkan. Urutan penerapannya sendiri, css akan memprioritaskan kode yang paling akhir (paling bawah dalam penulisan).

Contohnya, semisal kode css pada contoh diatas sama-sama ditulis dalam internal css, maka yang akan terbaca oleh sistem adalah yang berwarna hijau.

Namun, jika internal vs eksternal css, maka tergantung bagaimana penulisannya pada tag head. Jika element <link> ditulis lebih dulu ketimbang element <style> maka yang akan terbaca adalah internal css (css pada element style), tetapi jika element <style> ditulis lebih dulu sebelum element <link> maka yang akan terbaca adalah eksternal css (css eksternal yang dihubungkan dengan element link).

Selanjutnya eksternal/internal css vs inline css, maka yang akan terbaca adalah inline css. Hal tersebut disebabkan inline css ditulis pada element body, sedangkan internal dan eksternal css ditulis pada element head. Hal ini sangat berpengaruh karena element head selalu dituliskan diatas element body.

===================================================================================================================
Pertemuan 18 : Inheritance pada CSS
-------------------------------------------------------------------------------------------------------------------

Inheritance merupakan sifat pada css yaitu proses pewarisan dari induk element ke child element. Misalnya kita memberikan style pada element body, maka style tersebut juga akan diterapkan pada element-element lain yang menjadi child dari element body (berada didalam element body). 
Contoh :
<body style="color: red;">
    <h1>Judul</h1>
    <p>Isi Artikel</p>
</body>

Inheritance dapat dihentikan jika kita menuliskan style pada element tertentu yang ada di dalam element body tersebut.
Contoh :
<body style="color: red;">
    <h1 style="color: green;">Judul</h1>
    <p style="color: blue;">Isi Artikel</p>
</body>

===================================================================================================================
Pertemuan 19 : Specificity Selector
-------------------------------------------------------------------------------------------------------------------

Specificity Selector mirip seperti Cascade, yaitu merupakaan aturan skala prioritas dalam CSS. Perbedaannya adalah pada cascade berdasarkan posisi/urutan penulisan, sedangkan pada specificity berdasarkan nilai selector. Adapun nilai tiap selector pada css adalah sebagai berikut : 
- Element/Tag Selector      bernilai        1
- Class/Atribut Selector    bernilai        10
- ID Selector               bernilai        100
- Inline Style              bernilai        1000

===================================================================================================================
Pertemuan 20 : Keyword CSS - !important
-------------------------------------------------------------------------------------------------------------------

!important adalah senjata pamungkas yangg digunakan untuk memberikan tanda prioritas utama, walaupun nilai specificity selectornya kecil dan cascadenya bukan prioritas utma, ketika menggunakan keyword !important maka akan mengambil alih urutan prioritas. Cara menggunakannya ialah dengan menuliskan "!important" pada bagian belakang value.
Contoh : 
h1 {
    color: red !important;
}

Namun keyword !important tidak berguna jika bertemu dengan selector yang memiliki nilai specificity lebih tinggi dan sama-sama menggunakan keyword !important juga.

===================================================================================================================
Pertemuan 21 : Merencanakan Kode CSS
-------------------------------------------------------------------------------------------------------------------

Tips membuat kode css lebih efisien :

- Hindari penggunaan inline style
    Memiliki prioritas yang tinggi dan sulit di timpa, inline style juga sulit dideteksi. Jika memiliki banyak halaman maka mengubah inline style sangat tidak efisien.

- Jika memungkinkan, kurangin penggunaan internal/embed style
    Tidak efisien, khususnya jika sudah memiliki banyak halaman.

- Rencanakan Struktur HTML yang akan dibangun
    Rencanakan struktur HTML sebaik mungkin dengan konsisten, gunakan struktur yg sama pada setiap halaman berbeda. Hal ini akan membuat efisien, karena satu kode css eksternal dapat berjalan di semua halaman.

- Pertimbangkan jika ingin menggunakan ID Selector
    Alasannya sama seperti inline style, yaitu kurang efisien karena memiliki prioritas yang tinggi dan sulit ditimpa.

- Manfaatkan fitur inheritance
    Berhubungan dengan struktur html yang baik, kita dapat membuat format css yang bersifat global, misalnya mengatur ukuran font pada element body sehingga child element dari body akan ikut terformat.

===================================================================================================================
Pertemuan 22 : Property Font-Family
-------------------------------------------------------------------------------------------------------------------

Property Font-Family digunakan untuk mengatur/menentukan jenis font yang digunakan. Nilai dari property font-family adalah nama font yang digunakan. CSS akan mendeteksi jenis font yang diberikan dalam kode css pada komputer client yang mengakses web. 
Contoh :
p {
    font-family: Arial;
}

Kita juga bisa memberikan beberapa jenis font sebagai cadangan apabila jenis font pertama tidak tersedia.
Contoh :
p {
    font-family: Arial, Helvetica, sans-serif;
}

Untuk nama font yang memiliki spasi, kita bisa memberikan kutip dua (") di awal dan akhir nama font.
Contoh :
p {
    font-family: "Times New Roman";
}

Generik font bukan berupa nama font, melainkan sebuah jenis font. Generik font berfungsi sebagai alternatif jika font yang diinginkan tidak tersedia. CSS menyediaakan 5 jenis generik font, yaitu :
- serif             : Memberikan kaki / garis tambahan di setiap ujung/akhir huruf
- sans-serif        : Tanpa kaki
- monospace         : Tipe font khusus dimana lebar setiap karakter sama panjang
- cursive           : Jenis font yang meniru tulisan tangan / kaligrafi (Relatif jarang digunakan pada text utama)
- fantasy           : Bersifat visual dengan karakter font khusus (Relatif jarang digunakan pada text utama)

Kelima jenis font diatas akan menjadi patokan seperti apa jenis font yang ingin digunakan. Penggunaannya biasanya dituliskan pada opsi paling akhir, 
Contoh :
p {
    font-family: Arial, Helvetica, sans-serif;
}

Dari kode css diatas, sistem akan mencari font arial pada komputer client yang ingin menampilkan halaman web, jika tidak tersedia maka sistem akan mencari font helvetica, namun jika tidak tersedia juga maka sistem akan mencari font lain dengan jenis sans-serif (yang sejenis dengan arial dan helvetica).

===================================================================================================================
Pertemuan 23 : Property Font-Size
-------------------------------------------------------------------------------------------------------------------

Property Font-Size berguna untuk mengatur/menentukan ukuran font yang digunakan pada halaman web.

Value dari property ini dapat menggunakan tiga jenis satuan, yaitu :
- satuan pixel (px)
    Satuan ini relatif lebih mudah dipahami karena tidak terikat dengan settingan browser. Semisal kita menggunakan 20px, maka web browser akan menampilkan font sebesar 20px.
    Satuan ini sering digunakan karena ditampilkan secara konsisten di dalam berbagai web browser.

- satuan persen (%)
    Satuan persen merupakan satuan yang nilainya bersifat relatif. Perhitungan ukuran persen bergantung pada settingan dari parent element. Semisal kita mengatur font-size pada tag <p> senilai 80%, tag <p> berada di dalam tag <body> dan tag <body> memiliki syle font-size sebesar 14px. Maka nilai font-size pada tag <p> adalah 80% x 14px yaitu 11,2px.

- satuan em (em)
    Aturan pada satuan ini sama persis dengan satuan persen, hanya ada perbedaan pada penulisannya saja. "1em" pada css bernilai 100%, "0.5em" bernilai 50%, begitu juga seterusnya. Selain itu, penulisannya juga dapat disingkat, "0.5em" dapat ditulis ".5em".

- satuan rem (rem)
    Satuan ini sama seperti em, bedanya "r" disini bermakna root yang artinya parent element yang digunakan adalah tag <html>. Jadi, semisal kita menggunakan satuan rem pada font-size tag <p> yang berada dalam tag <body>, maka ukuran font-size pada tag <p> akan tetap mengacu pada ukuran font-size dari tag <html>, 

===================================================================================================================
Pertemuan 24 : Property Color
-------------------------------------------------------------------------------------------------------------------

Property Color digunakan untuk merubah warna font pada halaman web. Value dari property color bisa langsung menggunakan nama warna, nilai hexa, dan nilai rgb.

Menggunakan nama warna, Contohnya :
.nama_warna {
    color: green;
}

Menggunakan kode hexa, Contohnya :
.hexa {
    color: #8a5ae4c4;
}

Menggunakan kode rgb, Contohnya :
.rgb {
    color: rgb(155, 53, 53);
}

===================================================================================================================
Pertemuan 25 : Property Font-Weight
-------------------------------------------------------------------------------------------------------------------

Property Font-Weight digunakan untuk menebalkan huruf pada halaman web. Value dari property ini dapat berupa angka ataupun keyword. Value angka dapat menggunakan angka 100 s/d 900. Value keyword dapat menggunakan normal, bold, bolder, dan lighter. Selain itu ada juga 2 value lagi, "initial" mengatur property font-weight ke nilai default dan "inherit" mewarisi dari elemen atau tag di atasnya.